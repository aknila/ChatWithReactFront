{"version":3,"sources":["AppContext.tsx","components/AppHeader.tsx","components/AppFooter.tsx","components/AppMessageItem.tsx","components/AppMessageList.tsx","App.tsx","AllPath.tsx","serviceWorker.ts","index.tsx"],"names":["AppContext","React","createContext","undefined","spacing","childrenGap","AppHeader","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_isMounted","_showPanel","id","showPanel","state","setState","_hidePanel","panel","chan","inherits","createClass","key","value","style","root","fontSize","color","padding","imageProps","imageFit","ImageFit","contain","width","height","react_default","a","createElement","Stack","horizontalAlign","tokens","Text","variant","context","count","horizontal","DefaultButton","text","onClick","Panel","isOpen","isLightDismiss","headerText","onDismiss","Image","assign","src","pdp","alt","Label","styles","htmlFor","TextField","className","multiline","resizable","placeholder","author","onChange","changeName","changeUrl","Link","href","Component","contextType","AppFooter","myUploadRef","keyPress","event","keyCode","sendNewMessage","message","sendMessage","newValue","clickUpload","current","click","uploadFile","file","data","FormData","append","axios","post","endpoint","then","res","filename","split","join","link","originalname","createRef","_this2","Item","align","IconButton","iconProps","iconName","title","onKeyUp","PrimaryButton","ref","display","type","e","target","files","AppMessageItem","editMsg","edit","tmp","newText","validEditMessage","editMessage","uid","deleteMessage","button","textRender","_this$props","aid","date","mtch","match","inputClassName","borderless","length","data-automation-id","splitButtonAriaLabel","aria-roledescription","menuProps","items","substring","AppMessageList","myRef","scrollToBottom","scrollIntoView","behavior","list","listId","keys","map","AppMessageItem_AppMessageItem","float","clear","lastEvent","initializeIcons","index","App","updateData","loadMore","len","socket","emit","_getHistory","newList","save","forEach","elem","objectSpread","defineProperty","_wEditMessage","_wDeleteMessage","_editMessage","copy","filter","_deleteMessage","_sendMessage","now","moment","format","toString","uuid","_newMessage","localStorage","getItem","stateId","stateAuthor","statePdp","salonId","socketIOClient","on","prevProps","prevState","setItem","_this$state","Provider","AppHeader_AppHeader","AppMessageList_AppMessageList","AppFooter_AppFooter","AllPath","apply","arguments","es","noThrow","from","to","src_App_0","path","Boolean","window","location","hostname","render","src_AllPath","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d9fc483a.chunk.js","sourcesContent":["import React from 'react'\nimport { Message } from './App.types';\n\ninterface AppContextInterface {\n\tauthor: string;\n    list: Message[] | null;\n    count: number;\n    id: string;\n    pdp: string | null;\n    endpoint: string;\n    sendMessage: (author: string, text: string, aid: string, pdp: string | null, type: string, link: string | null) => void;\n    changeName: (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue: string | undefined) => void;\n    changeUrl: (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue: string | undefined) => void;\n    editMessage: (uid: string, text: string) => void;\n    deleteMessage: (uid: string) => void;\n}\n\nexport const AppContext = React.createContext<AppContextInterface | undefined>(undefined);\n","import React from 'react';\nimport { Stack, Text, TextField, Label, Panel, DefaultButton, Image, IImageProps, ImageFit, Link } from 'office-ui-fabric-react';\nimport { AppContext } from '../AppContext';\n\nconst spacing = {\n\tchildrenGap: 10\n}\n\nexport class AppHeader extends React.Component<any, any> {\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tshowPanel: {\n\t\t\t\tpanel: false,\n\t\t\t\tchan: false\n\t\t\t}\n\t\t}\n\t}\n\n\t_isMounted = false;\n\n\t// affiche/cache le panel qui permet de changer son Username et son image de profil\n\tprivate _showPanel = (id: string) => (): void => {\n\n\t\tconst { showPanel } = this.state;\n\t\tshowPanel[id] = true;\n\n\t\tif (this._isMounted)\n\t\t{\n\t\t\tthis.setState({ showPanel: showPanel });\n\t\t}\n\t};\n\n\tprivate _hidePanel = (id: string) => (): void => {\n\n\t\tconst { showPanel } = this.state;\n\t\tshowPanel[id] = false;\n\n\t\tif (this._isMounted)\n\t\t{\n\t\t\tthis.setState({ showPanel: showPanel });\n\t\t}\n\t};\n\n\tcomponentDidMount() {\n\t\tthis._isMounted = true;\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis._isMounted = false;\n\t}\n\n\trender() {\n\t\tconst style = {\n\t\t\troot: {\n\t\t\t\tfontSize: '10px',\n\t\t\t\tcolor: '#aaa',\n\t\t\t\tpadding: 0\n\t\t\t}\n\t\t}\n\n\t\tconst imageProps: IImageProps = {\n\t\t\timageFit: ImageFit.contain,\n\t\t\twidth: 200,\n\t\t\theight: 200\n\t\t};\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Stack horizontalAlign=\"center\" padding={10} tokens={spacing}>\n\t\t\t\t\t<Text variant=\"xLarge\">\n\t\t\t\t\t\tChat With React (Connected: {this.context.count})\n\t\t\t\t\t</Text>\n\t\t\t\t\t<Stack horizontalAlign=\"center\" horizontal tokens={spacing}>\n\t\t\t\t\t\t<DefaultButton text=\"Channel List\" onClick={this._showPanel('chan')} />\n\t\t\t\t\t\t<DefaultButton text=\"Profil Settings\" onClick={this._showPanel('panel')} />\n\t\t\t\t\t</Stack>\n\t\t\t\t</Stack>\n\t\t\t\t<Panel isOpen={this.state.showPanel.panel} isLightDismiss={true} headerText=\"Profil Settings\" onDismiss={this._hidePanel('panel')}>\n\t\t\t\t\t<Image\n\t\t\t\t\t\t{...imageProps as any}\n\t\t\t\t\t\t// Image par defaut si la variable pour l image est vide\n\t\t\t\t\t\tsrc={this.context.pdp ? this.context.pdp : 'https://www.freeiconspng.com/uploads/discord-metro-style-icon-0.png'}\n\t\t\t\t\t\talt=\"Profil Photo\"\n\t\t\t\t\t/>\n\t\t\t\t\t<Label styles={style} htmlFor=\"idName\">Name</Label>\n\t\t\t\t\t<TextField className=\"textInput\" id=\"idName\" multiline={false} resizable={false} placeholder=\"Anonyme\" value={this.context.author} onChange={this.context.changeName}/>\n\t\t\t\t\t<Label styles={style} htmlFor=\"idProfil\">Image</Label>\n\t\t\t\t\t<TextField className=\"textInput\" id=\"idProfil\" multiline={false} resizable={false} placeholder=\"Image Url\" value={this.context.pdp} onChange={this.context.changeUrl}/>\n\t\t\t\t</Panel>\n\t\t\t\t<Panel isOpen={this.state.showPanel.chan} isLightDismiss={true} headerText=\"Channel\" onDismiss={this._hidePanel('chan')}>\n\t\t\t\t\t<Stack horizontalAlign=\"center\" padding={10} tokens={spacing}>\n\t\t\t\t\t\t<Link className=\"channelBlock\" href=\"/salon/1\">Salon 1</Link>\n\t\t\t\t\t\t<Link className=\"channelBlock\" href=\"/salon/2\">Salon 2</Link>\n\t\t\t\t\t\t<Link className=\"channelBlock\" href=\"/salon/3\">Salon 3</Link>\n\t\t\t\t\t\t<Link className=\"channelBlock\" href=\"/salon/4\">Salon 4</Link>\n\t\t\t\t\t\t<Link className=\"channelBlock\" href=\"/salon/5\">Salon 5</Link>\n\t\t\t\t\t</Stack>\n\t\t\t\t</Panel>\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nAppHeader.contextType = AppContext;","import React from 'react';\nimport { Stack, TextField, PrimaryButton, IconButton } from 'office-ui-fabric-react';\nimport { AppContext } from '../AppContext';\nimport axios  from 'axios';\n\ninterface AppFooterState {\n\tmessage: string | undefined;\n}\n\nconst spacing = {\n\tchildrenGap: 10\n}\n\nexport class AppFooter extends React.Component<any, AppFooterState> {\n\n\tmyUploadRef: React.RefObject<HTMLInputElement>;\n\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmessage: undefined\n\t\t};\n\t\tthis.myUploadRef = React.createRef<HTMLInputElement>();\n\t}\n\n\t// Valide le message si on appuis sur Entrée\n\tprivate keyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n\t\tif (event.keyCode === 13) {\n\t\t\tthis.sendNewMessage();\n\t\t}\n\t}\n\t\n\t// Envoi le message et vide le contenu de la variable message\n\tprivate sendNewMessage = () => {\n\t\tif (this.state.message) {\n\t\t\tthis.context.sendMessage((this.context.author ? this.context.author : 'Anonyme'), this.state.message, this.context.id, this.context.pdp, 'message', null);\n\t\t\tthis.setState({ message: undefined });\n\t\t}\n\t}\n\n\tprivate onChange = (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue: string | undefined) : void => {\n\t\tthis.setState({ message: newValue});\n\t};\n\n\tprivate clickUpload = () => {\n\t\tif (this.myUploadRef && this.myUploadRef.current) {\n\t\t  this.myUploadRef.current.click()\n\t\t}\n\t}\n\n\tprivate uploadFile = (file: FileList | null) => {\n\t\tif (file) {\n\t\t\tlet data = new FormData();\n\t\t\tdata.append('file', file[0]);\n\t\t\taxios.post(this.context.endpoint + \"/upload\", data)\n      \t\t.then(res => {\n\t\t\t\tlet text = this.context.endpoint + '/static/' + res.data.filename.split(' ').join('%20');\n\t\t\t\tlet link = res.data.originalname;\n\t\t\t\tthis.context.sendMessage((this.context.author ? this.context.author : 'Anonyme'), text, this.context.id, this.context.pdp, 'file', link);\n\t\t\t})\n\t\t}\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<Stack horizontal horizontalAlign=\"center\" padding={10} tokens={spacing}>\n\t\t\t\t<Stack.Item align=\"center\">\n\t\t\t\t\t<IconButton iconProps={{ iconName: 'CirclePlus' }} title=\"Upload\" onClick={this.clickUpload} />\n\t\t\t\t</Stack.Item>\n\t\t\t\t<Stack.Item align=\"center\">\n\t\t\t\t\t<TextField id=\"sendInput\" multiline={false} resizable={false} placeholder=\"Type message...\" value={this.state.message} onChange={this.onChange} onKeyUp={this.keyPress}/>\n\t\t\t\t</Stack.Item>\n\t\t\t\t<Stack.Item align=\"center\">\n\t\t\t\t\t<PrimaryButton id=\"sendButton\" text=\"Send\" onClick={this.sendNewMessage}/>\n\t\t\t\t</Stack.Item>\n\t\t\t\t<input ref={this.myUploadRef} style={{ display: \"none\" }} type=\"file\" onChange={ (e) => this.uploadFile(e.target.files) } />\n\t\t\t</Stack>\n\t\t);\n\t}\n}\n\nAppFooter.contextType = AppContext;","import React from 'react';\nimport { Label, Stack, Text, IconButton, TextField, Image, IImageProps, ImageFit, Link } from 'office-ui-fabric-react';\nimport { AppContext } from '../AppContext';\n\nexport class AppMessageItem extends React.Component<any, any> {\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tedit: false,\n\t\t\ttmp: null,\n\t\t\tnewText: null\n\t\t}\n\t}\n\n\t// Active le mode edit, garde une copie du message original et initialise la value de l input avec le meme texte\n\tprivate editMsg = (text: string) => {\n\t\tthis.setState({\n\t\t\tedit: true,\n\t\t\ttmp: text,\n\t\t\tnewText: text\n\t\t})\n\n\t}\n\n\t// 13: Touche entrée pour valider / 27: Echap pour annuler l edition\n\tprivate keyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n\t\tif (event.keyCode === 13) {\n\t\t\tthis.validEditMessage();\n\t\t}\n\t\tif (event.keyCode === 27) {\n\t\t\tthis.setState({\n\t\t\t\tedit: false,\n\t\t\t\ttmp: null,\n\t\t\t\tnewText: null\n\t\t\t})\n\t\t}\n\t}\n\t\n\t// Valide la fin de l edition du message, dans le cas d une modification qui rend le message vide, il est alors supprimé\n\tprivate validEditMessage = () => {\n\t\tconst { newText } = this.state\n\t\tthis.setState({\n\t\t\tedit: false,\n\t\t\ttmp: null,\n\t\t\tnewText: null\n\t\t})\n\t\tif (newText) {\n\t\t\tthis.context.editMessage(this.props.uid, newText)\n\t\t} else {\n\t\t\tthis.context.deleteMessage(this.props.uid)\n\t\t}\n\t}\n\n\t// Met a jour la variable du nouveau message pour chaque modification du texte\n\tprivate onChange = (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue: string | undefined) : void => {\n\t\tthis.setState({ newText: newValue});\n\t};\n\n\trender() {\n\t\tconst { author, text, id, aid, date, uid, type, link } = this.props;\n\t\tconst style = {\n\t\t\troot: {\n\t\t\t\tfontSize: '10px',\n\t\t\t\tcolor: '#ffffff',\n\t\t\t\tpadding: 0\n\t\t\t}\n\t\t}\n\t\tlet button;\n\n\t\tconst imageProps: IImageProps = {\n\t\t\timageFit: ImageFit.contain,\n\t\t\twidth: 100,\n\t\t\theight: 100\n\t\t};\n\n\t\t// eslint-disable-next-line\n\t\tlet mtch = text.match(/(^data:image\\/([a-zA-Z]*);base64,([^\\\"]*))|(\\.(gif|jpe?g|tiff|png)$)/i);\n\t\tlet textRender;\n\t\t// Selon si on est en edit ou non, rend un component input ou text\n\t\tif (type === 'message') {\n\t\t\tif (this.state.edit) {\n\t\t\t\ttextRender = <TextField className=\"inputEditContainer\" inputClassName=\"inputEdit\" borderless multiline={false} resizable={false} id={id} value={this.state.newText} onChange={this.onChange} onKeyUp={this.keyPress} />\n\t\t\t} else if (mtch && mtch.length > 0) {\n\t\t\t\ttextRender = <Image\n\t\t\t\t\t{...imageProps as any}\n\t\t\t\t\tsrc={text}\n\t\t\t\t\talt=\"Photo in message\"\n\t\t\t\t/>\n\t\t\t} else {\n\t\t\t\ttextRender = <Text id={id}>{text}</Text>\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (mtch && mtch.length > 0) {\n\t\t\t\ttextRender = <Image\n\t\t\t\t\t{...imageProps as any}\n\t\t\t\t\tsrc={text}\n\t\t\t\t\talt={link}\n\t\t\t\t/>\n\t\t\t} else {\n\t\t\t\ttextRender = <Link className=\"fileLink\" href={text}>{link}</Link>\n\t\t\t}\n\t\t}\n\n\t\t// Permet de mettre en place les options si on est l auteur du message\n\t\tif (aid === this.context.id && type === 'message') {\n\t\t\tbutton = <IconButton\n\t\t\t\tdata-automation-id=\"test\"\n\t\t\t\ttext=\"\"\n\t\t\t\tsplitButtonAriaLabel={'See 2 sample options'}\n\t\t\t\taria-roledescription={'split button'}\n\t\t\t\tstyle={{ height: '35px' }}\n\t\t\t\tmenuProps={{\n\t\t\t\t\titems: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: 'editMessage',\n\t\t\t\t\t\t\ttext: 'Edit',\n\t\t\t\t\t\t\ticonProps: { iconName: 'CodeEdit' },\n\t\t\t\t\t\t\tonClick: () => this.editMsg(text)\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: 'deleteMessage',\n\t\t\t\t\t\t\ttext: 'Delete',\n\t\t\t\t\t\t\ticonProps: { iconName: 'Delete' },\n\t\t\t\t\t\t\tonClick: () => this.context.deleteMessage(uid)\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}}\n\t\t  />\n\t\t} else if (aid === this.context.id) {\n\t\t\tbutton = <IconButton\n\t\t\t\tdata-automation-id=\"test\"\n\t\t\t\ttext=\"\"\n\t\t\t\tsplitButtonAriaLabel={'See 1 sample options'}\n\t\t\t\taria-roledescription={'split button'}\n\t\t\t\tstyle={{ height: '35px' }}\n\t\t\t\tmenuProps={{\n\t\t\t\t\titems: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: 'deleteMessage',\n\t\t\t\t\t\t\ttext: 'Delete',\n\t\t\t\t\t\t\ticonProps: { iconName: 'Delete' },\n\t\t\t\t\t\t\tonClick: () => this.context.deleteMessage(uid)\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}}\n\t\t  />\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Stack horizontal>\n\t\t\t\t\t<Stack id=\"messageItem\" className={aid === this.context.id ? \"containerItemAuthor\" : \"containerItem\"} padding={7}>\n\t\t\t\t\t\t<Label styles={style} htmlFor={id}>{author}#{aid.substring(0, 4)} {date}</Label>\n\t\t\t\t\t\t{textRender}\n\t\t\t\t\t</Stack>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{button}\n\t\t\t\t\t</div>\n\t\t\t\t</Stack>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nAppMessageItem.contextType = AppContext;","import React from 'react';\nimport { Stack, Image, IImageProps, ImageFit } from 'office-ui-fabric-react';\nimport { AppMessageItem } from './AppMessageItem';\nimport { AppContext } from '../AppContext';\n\nconst spacing = {\n\tchildrenGap: 10\n}\n\nexport class AppMessageList extends React.Component<any, any> {\n\n\t_isMounted = false;\n\tmyRef: React.RefObject<HTMLDivElement> | null;\n\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.myRef = React.createRef();\n\t}\n\n\trender() {\n\t\tconst { list } = this.context;\n\n\t\tconst listId = Object.keys(list);\n\t\tconst imageProps: IImageProps = {\n\t\t\timageFit: ImageFit.contain,\n\t\t\twidth: 50,\n\t\t\theight: 50,\n\t\t\tclassName: 'pdpImage'\n\t\t};\n\n\t\treturn (\n\t\t\t<Stack className=\"container\" tokens={spacing}>\n\t\t\t\t{listId.map(id => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Stack key={id} horizontal tokens={{childrenGap: 5}} className=\"subContainer\">\n\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t{...imageProps}\n\t\t\t\t\t\t\t\tsrc={ list[id].pdp ? list[id].pdp : 'https://www.freeiconspng.com/uploads/discord-metro-style-icon-0.png' }\n\t\t\t\t\t\t\t\talt=\"Profil Photo\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<AppMessageItem id={id} {...list[id]}/>\n\t\t\t\t\t\t</Stack>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t\t<div style={{ float:\"left\", clear: \"both\" }}\n             \t\tref={this.myRef}>\n    \t\t\t</div>\n\t\t\t</Stack>\n\t\t)\n\t}\n\n\t// Permet de descendre tout en bas de la liste de message quand un nouveau message arrive\n\tscrollToBottom = () => {\n\t\tif (this.myRef && this.myRef.current && this._isMounted) {\n\t\t\tthis.myRef.current.scrollIntoView({ behavior: \"smooth\"});\n\t\t}\n\t}\n\t\n\tcomponentDidMount() {\n\t\tthis._isMounted = true;\n\t\tthis.scrollToBottom();\n\t}\n\n\t// Scroll uniquement si il y a un nouveau message\n\tcomponentDidUpdate() {\n\t\tif (this.props.lastEvent === 'new' && this._isMounted) {\n\t\t\tthis.scrollToBottom();\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis._isMounted = false;\n\t}\n}\n\nAppMessageList.contextType = AppContext;","import React from 'react';\nimport './App.css';\nimport { AppHeader } from './components/AppHeader';\nimport { AppFooter } from './components/AppFooter';\nimport { AppMessageList } from './components/AppMessageList';\nimport { AppContext } from './AppContext';\nimport socketIOClient from \"socket.io-client\";\nimport uuid from 'uuidv4';\nimport { Link } from 'office-ui-fabric-react';\nimport moment from 'moment';\nimport { initializeIcons } from '@uifabric/icons';\nimport { Message } from './App.types';\n// import Auth from './auth/Auth';\ninitializeIcons();\n\nlet index = 1;\n\nexport class App extends React.Component<any, any> {\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tlist: {},\n\t\t\tlastEvent: '',\n\t\t\tauthor: localStorage.getItem(\"contextAuthorKey\"),\n\t\t\tendpoint: 'http://212.47.251.157:4001',\n\t\t\t// endpoint: 'http://172.24.111.88:4001',\n\t\t\t// endpoint: 'http://127.0.0.1:4001',\n\t\t\tsocket: null,\n\t\t\tcount: 1,\n\t\t\tid: localStorage.getItem(\"contextIdKey\"),\n\t\t\tpdp: localStorage.getItem(\"contextPdpKey\")\n\t\t}\n\t\t// const auth: Auth = new Auth();\n\t}\n\n\t_isMounted = false;\n\n\t// Permet de garder a jour le nombre de personnes connectées\n\tupdateData = (data: {count: number}) : void => {\n\t\tif (this._isMounted) {\n\t\t\tthis.setState({count: data.count});\n\t\t}\n\t}\n\n\t// Quand le component est pret, lance la connexion via socket avec le server\n\t// Et bind les messages d'ecoute sur cette connexion\n  \tcomponentDidMount() {\n\t\tthis._isMounted = true;\n\t\tlet stateId = (this.state.id ? this.state.id : uuid());\n\t\tlet stateAuthor = (this.state.author ? this.state.author : '');\n\t\tlet statePdp = (this.state.pdp ? this.state.pdp : '');\n\t\tconst { endpoint } = this.state;\n\t\tconst id = this.props.salonId;\n\t\tconst socket = socketIOClient(endpoint + '/salon' + (id > 0 && id <= 5 ? id : '1'));\n\t\tsocket.on('history', this._getHistory)\n\t\tsocket.on(\"chat message\", (data: Message) : void => {this._newMessage(data)});\n\t\tsocket.on('new on', this.updateData);\n\t\tsocket.on('new off', this.updateData);\n\t\tsocket.on('delete message', this._deleteMessage);\n\t\tsocket.on('edit message', this._editMessage);\n\t\tif (this._isMounted) {\n\t\t\tthis.setState({\n\t\t\t\tsocket: socket,\n\t\t\t\tid: stateId,\n\t\t\t\tpdp: statePdp,\n\t\t\t\tauthor: stateAuthor\n\t\t\t})\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps: any, prevState: any) {\n\t\tif (this.state.id !== prevState.id) {\n\t\t\tlocalStorage.setItem(\"contextIdKey\", this.state.id)\n\t\t}\n\t\tif (this.state.author !== prevState.author) {\n\t\t\tlocalStorage.setItem(\"contextAuthorKey\", this.state.author)\n\t\t}\n\t\tif (this.state.pdp !== prevState.pdp) {\n\t\t\tlocalStorage.setItem(\"contextPdpKey\", this.state.pdp)\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis._isMounted = false;\n\t}\n\n\trender () {\n\t\tconst { list, author, count, id, pdp, endpoint } = this.state;\n\n\t\tconst style = {\n\t\t\troot: {\n\t\t\t\tpadding: 5\n\t\t\t}\n\t\t};\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<AppContext.Provider value={{\n\t\t\t\t\t\tlist: list,\n\t\t\t\t\t\tauthor: author,\n\t\t\t\t\t\tcount: count,\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\tpdp: pdp,\n\t\t\t\t\t\tsendMessage: this._sendMessage,\n\t\t\t\t\t\tchangeName: this.changeName,\n\t\t\t\t\t\tchangeUrl: this.changeUrl,\n\t\t\t\t\t\teditMessage: this._wEditMessage,\n\t\t\t\t\t\tdeleteMessage: this._wDeleteMessage,\n\t\t\t\t\t\tendpoint: endpoint\n\t\t\t\t\t}}>\n\t\t\t\t\t<AppHeader />\n\t\t\t\t\t<Link styles={style} onClick={this.loadMore}>Load more</Link>\n\t\t\t\t\t<AppMessageList lastEvent={this.state.lastEvent}/>\n\t\t\t\t\t<AppFooter />\n\t\t\t\t</AppContext.Provider>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tprivate loadMore = () => {\n\t\tif (this._isMounted) {\n\t\t\tlet len = Object.keys(this.state.list).length + 5;\n\t\t\tthis.state.socket.emit('history', {len: len})\n\t\t}\n\t}\n\n\tprivate _getHistory = (data: {save: Message[]}) => {\n\t\tif (this._isMounted) {\n\n\t\t\t// const { list } = this.state;\n\t\t\tlet newList = {};\n\n\t\t\tdata.save.forEach((elem) => {\n\t\t\t\tlet listId = index++;\n\t\t\t\tnewList = {...newList, [listId]: { author: elem.author, text: elem.text, aid: elem.aid, pdp: elem.pdp, date: elem.date, uid: elem.uid, type: elem.type, link: elem.link }}\n\t\t\t})\n\n\t\t\tthis.setState({\n\t\t\t\tlist: newList\n\t\t\t})\n\t\t}\n\t}\n\n\t// Lance au serveur un event d edition de message\n\tprivate _wEditMessage = (uid: string, text: string) => {\n\t\tif (this._isMounted) {\n\t\t\tthis.state.socket.emit('edit message', {uid: uid, text: text});\n\t\t}\n\t}\n\n\t// Lance au serveur un event de suppression de message\n\tprivate _wDeleteMessage = (uid: string) => {\n\t\tif (this._isMounted) {\n\t\t\tthis.state.socket.emit('delete message', {uid: uid});\n\t\t}\n\t}\n\n\t// Reçois les infos depuis le serveur sur le message a editer\n\tprivate _editMessage = (data: {uid: string, text: string}) => {\n\t\tif (this._isMounted) {\n\t\t\tconst { list } = this.state;\n\t\t\tlet copy = list;\n\t\t\tconst keys = Object.keys(list);\n\t\t\tconst newList = keys.filter(id => (list[id].uid === data.uid))\n\t\t\tif (newList && newList.length > 0 && copy[newList[0]]) {\n\t\t\t\tcopy[newList[0]].text = data.text;\n\t\t\t\tthis.setState({\n\t\t\t\t\tlist: copy,\n\t\t\t\t\tlastEvent: 'edit'\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t// Reçois les infos depuis le serveur sur le message a supprimer\n\tprivate _deleteMessage = (data: {uid: string}) => {\n\t\tif (this._isMounted) {\n\t\t\tconst { list } = this.state;\n\t\t\tlet copy = list;\n\t\t\tconst keys = Object.keys(list);\n\t\t\tconst newList = keys.filter(id => (list[id].uid === data.uid))\n\t\t\tif (newList && newList.length > 0 && copy[newList[0]]) {\n\t\t\t\tdelete copy[newList[0]];\n\t\t\t\tthis.setState({\n\t\t\t\t\tlist: copy,\n\t\t\t\t\tlastEvent: 'delete'\n\t\t\t\t})\n\t\t\t}\n\t\t\tif (Object.keys(copy).length < 7) {\n\t\t\t\tthis.state.socket.emit('history', {len: 7})\n\t\t\t}\n\t\t}\n\t}\n\n\t// Lance au serveur un event de nouveau message\n\tprivate _sendMessage = (author: string, text: string, aid: string, pdp: string | null, type: string, link: string | null) => {\n\t\tif (this._isMounted) {\n\t\t\tconst now = moment().format(\"hh:mm A\").toString();\n\t\t\tthis.state.socket.emit('chat message', {author: author, text: text, aid: aid, pdp: pdp, uid: uuid(), date: now, type: type, link: link})\n\t\t}\n\t}\n\n\t// Reçois les infos depuis le serveur sur l arrivée d un nouveau message\n\tprivate _newMessage = (data: Message) => {\n\t\tif (this._isMounted) {\n\n\t\t\tconst { list } = this.state;\n\t\t\tconst listId = index++;\n\n\t\t\tthis.setState({\n\t\t\t\tlist: {...list, [listId]: {author: data.author, text: data.text, aid: data.aid, pdp: data.pdp, date: data.date, uid: data.uid, type: data.type, link: data.link}},\n\t\t\t\tlastEvent: 'new'\n\t\t\t})\n\t\t}\n\t}\n\n\t// Permet au panel dans le header de changer les valeurs pour le nom et l url de la pdp\n\tprivate changeName = (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue: string | undefined) : void => {\n\t\tif (this._isMounted) {\n\t\t\tthis.setState({\n\t\t\t\tauthor: newValue\n\t\t\t})\n\t\t}\n\t};\n\n\tprivate changeUrl = (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue: string | undefined) : void => {\n\t\tif (this._isMounted) {\n\t\t\tthis.setState({\n\t\t\t\tpdp: newValue\n\t\t\t})\n\t\t}\n\t};\n}\n\nexport default App;\n","import React from 'react';\nimport { Router, Redirect } from \"@reach/router\"\nimport App from './App';\n// import Auth from './auth/Auth';\n// import { Login } from './components/Login';\n// import { Callback } from './components/Callback';\n\nexport class AllPath extends React.Component<any, any> {\n\t// constructor(props: any) {\n\t// \tsuper(props);\n\t// \tthis.state = {\n\t// \t\tauth: new Auth()\n\t// \t}\n\t// }\n\n\trender() {\n\t\t// const { auth } = this.state;\n\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t{/* <Login path=\"login\" auth={auth}/> */}\n\t\t\t\t{/* <Callback path=\"callback\" auth={auth}/> */}\n\t\t\t\t<Redirect noThrow from=\"*\" to=\"/salon/1\" />\n\t\t\t\t<App path=\"/salon/:salonId\"/>\n\t\t\t</Router>\n\t\t)\n\t}\n};\n\nexport default AllPath;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from \"react-dom\"\nimport './index.css';\nimport AllPath from './AllPath'\nimport * as serviceWorker from './serviceWorker';\n\nrender(<AllPath />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}