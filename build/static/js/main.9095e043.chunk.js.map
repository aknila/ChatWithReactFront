{"version":3,"sources":["AppContext.tsx","components/AppHeader.tsx","components/AppFooter.tsx","components/AppMessageItem.tsx","components/AppMessageList.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["AppContext","React","createContext","undefined","spacing","childrenGap","AppHeader","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_isMounted","_showPanel","setState","showPanel","_hidePanel","state","inherits","createClass","key","value","style","root","fontSize","color","padding","imageProps","imageFit","ImageFit","contain","width","height","react_default","a","createElement","Stack","horizontalAlign","tokens","Text","variant","context","count","DefaultButton","text","onClick","Panel","isOpen","isLightDismiss","headerText","onDismiss","Image","assign","src","pdp","alt","Label","styles","htmlFor","TextField","className","id","multiline","resizable","placeholder","author","onChange","changeName","changeUrl","Component","contextType","AppFooter","keyPress","event","keyCode","sendNewMessage","message","sendMessage","newValue","horizontal","Item","align","onKeyUp","PrimaryButton","AppMessageItem","editMsg","edit","tmp","newText","validEditMessage","editMessage","uid","deleteMessage","button","textInput","_this2","_this$props","aid","date","IconButton","data-automation-id","splitButtonAriaLabel","aria-roledescription","menuProps","items","iconProps","iconName","inputClassName","borderless","substring","AppMessageList","myRef","scrollToBottom","current","scrollIntoView","behavior","createRef","list","listId","keys","map","AppMessageItem_AppMessageItem","float","clear","ref","lastEvent","initializeIcons","index","App","updateData","data","_wEditMessage","socket","emit","_wDeleteMessage","_editMessage","copy","filter","_deleteMessage","_sendMessage","uuid","_newMessage","now","moment","format","toString","objectSpread","defineProperty","1","2","endpoint","response","socketIOClient","on","_this$state","Provider","AppHeader_AppHeader","AppMessageList_AppMessageList","AppFooter_AppFooter","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9095e043.chunk.js","sourcesContent":["import React from 'react'\nimport { MessagesList } from './App.types';\n\ninterface AppContextInterface {\n\tauthor: string;\n    list: MessagesList | null;\n    count: number;\n    id: string;\n    pdp: string | null;\n    sendMessage: (author: string, text: string, id: string, pdp: string | null) => void;\n    changeName: (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue: string | undefined) => void;\n    changeUrl: (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue: string | undefined) => void;\n}\n\nexport const AppContext = React.createContext<AppContextInterface | undefined>(undefined);\n","import React from 'react';\nimport { Stack, Text, TextField, Label, Panel, DefaultButton, Image, IImageProps, ImageFit } from 'office-ui-fabric-react';\nimport { AppContext } from '../AppContext';\n\nconst spacing = {\n\tchildrenGap: 10\n}\n\nexport class AppHeader extends React.Component<any, any> {\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tshowPanel: false\n\t\t}\n\t}\n\n\t_isMounted = false;\n\n  // affiche/cache le panel qui permet de changer son Username et son image de profil\n\tprivate _showPanel = (): void => {\n\t\tif (this._isMounted)\n\t\t{\n\t\t\tthis.setState({ showPanel: true });\n\t\t}\n\t};\n\t\n\tprivate _hidePanel = (): void => {\n\t\tif (this._isMounted)\n\t\t{\t\n\t\t\tthis.setState({ showPanel: false });\n\t\t}\n\t};\n\n\tcomponentDidMount() {\n\t\tthis._isMounted = true;\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis._isMounted = false;\n\t}\n\n\trender() {\n\t\tconst style = {\n\t\t\troot: {\n\t\t\t\tfontSize: '10px',\n\t\t\t\tcolor: '#aaa',\n\t\t\t\tpadding: 0\n\t\t\t}\n\t\t}\n\n    const imageProps: IImageProps = {\n      imageFit: ImageFit.contain,\n      width: 200,\n\t\t\theight: 200\n\t\t};\n\n\t\treturn (\n\t\t\t<div>\n        <Stack horizontalAlign=\"center\" padding={10} tokens={spacing}>\n\t\t\t\t  <Text variant=\"xLarge\">\n\t\t\t\t\t  Chat With React (Connected: {this.context.count})\n\t\t\t\t  </Text>\n\t\t\t\t  <DefaultButton text=\"Profil Settings\" onClick={this._showPanel} />\n\t\t\t  </Stack>\n        <Panel isOpen={this.state.showPanel} isLightDismiss={true} headerText=\"Profil Settings\" onDismiss={this._hidePanel}>\n          <Image\n            {...imageProps as any}\n            // Image par defaut si la variable pour l image est vide\n            src={this.context.pdp ? this.context.pdp : 'https://www.freeiconspng.com/uploads/discord-metro-style-icon-0.png'}\n            alt=\"Profil Photo\"\n          />\n          <Label styles={style} htmlFor=\"idName\">Name</Label>\n  \t\t\t\t<TextField className=\"textInput\" id=\"idName\" multiline={false} resizable={false} placeholder=\"Anonyme\" value={this.context.author} onChange={this.context.changeName}/>\n\t\t  \t\t<Label styles={style} htmlFor=\"idProfil\">Image</Label>\n\t\t\t  \t<TextField className=\"textInput\" id=\"idProfil\" multiline={false} resizable={false} placeholder=\"Image Url\" value={this.context.pdp} onChange={this.context.changeUrl}/>\n        </Panel>\n      </div>\n\t\t);\n\t}\n};\n\nAppHeader.contextType = AppContext;","import React from 'react';\nimport { Stack, TextField, PrimaryButton } from 'office-ui-fabric-react';\nimport { AppContext } from '../AppContext';\n\ninterface AppFooterState {\n\tmessage: string | undefined;\n}\n\nconst spacing = {\n\tchildrenGap: 10\n}\n\nexport class AppFooter extends React.Component<any, AppFooterState> {\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmessage: undefined\n\t\t};\n\t}\n\n\t// Valide le message si on appuis sur Entrée\n\tprivate keyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n\t\tif (event.keyCode === 13) {\n\t\t\tthis.sendNewMessage();\n\t\t}\n\t}\n\t\n\t// Envoi le message et vide le contenu de la variable message\n\tprivate sendNewMessage = () => {\n\t\tif (this.state.message) {\n\t\t\tthis.context.sendMessage((this.context.author ? this.context.author : 'Anonyme'), this.state.message, this.context.id, this.context.pdp);\n\t\t\tthis.setState({ message: undefined });\n\t\t}\n\t}\n\n\tprivate onChange = (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue: string | undefined) : void => {\n\t\tthis.setState({ message: newValue});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Stack horizontal horizontalAlign=\"center\" padding={10} tokens={spacing}>\n\t\t\t\t<Stack.Item align=\"center\">\n\t\t\t\t\t<TextField id=\"sendInput\" multiline={false} resizable={false} placeholder=\"Type message...\" value={this.state.message} onChange={this.onChange} onKeyUp={this.keyPress}/>\n\t\t\t\t</Stack.Item>\n\t\t\t\t<Stack.Item align=\"center\">\n\t\t\t\t\t<PrimaryButton id=\"sendButton\" text=\"Send\" onClick={this.sendNewMessage}/>\n\t\t\t\t</Stack.Item>\n\t\t\t</Stack>\n\t\t);\n\t}\n}\n\nAppFooter.contextType = AppContext;","import React from 'react';\nimport { Label, Stack, Text, IconButton, TextField } from 'office-ui-fabric-react';\nimport { AppContext } from '../AppContext';\n\nexport class AppMessageItem extends React.Component<any, any> {\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tedit: false,\n\t\t\ttmp: null,\n\t\t\tnewText: null\n\t\t}\n\t}\n\n\t// Active le mode edit, garde une copie du message original et initialise la value de l input avec le meme texte\n\tprivate editMsg = (text: string) => {\n\t\tthis.setState({\n\t\t\tedit: true,\n\t\t\ttmp: text,\n\t\t\tnewText: text\n\t\t})\n\n\t}\n\n\t// 13: Touche entrée pour valider / 27: Echap pour annuler l edition\n\tprivate keyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n\t\tif (event.keyCode === 13) {\n\t\t\tthis.validEditMessage();\n\t\t}\n\t\tif (event.keyCode === 27) {\n\t\t\tthis.setState({\n\t\t\t\tedit: false,\n\t\t\t\ttmp: null,\n\t\t\t\tnewText: null\n\t\t\t})\t\n\t\t}\n\t}\n\t\n\t// Valide la fin de l edition du message, dans le cas d une modification qui rend le message vide, il est alors supprimé\n\tprivate validEditMessage = () => {\n\t\tconst { newText } = this.state\n\t\tthis.setState({\n\t\t\tedit: false,\n\t\t\ttmp: null,\n\t\t\tnewText: null\n\t\t})\n\t\tif (newText) {\n\t\t\tthis.context.editMessage(this.props.uid, newText)\n\t\t} else {\n\t\t\tthis.context.deleteMessage(this.props.uid)\n\t\t}\n\t}\n\n\t// Met a jour la variable du nouveau message pour chaque modification du texte\n\tprivate onChange = (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue: string | undefined) : void => {\n\t\tthis.setState({ newText: newValue});\n\t};\n\n\trender() {\n\t\tconst { author, text, id, aid, date, uid } = this.props;\n\t\tconst style = {\n\t\t\troot: {\n\t\t\t\tfontSize: '10px',\n\t\t\t\tcolor: '#ffffff',\n\t\t\t\tpadding: 0\n\t\t\t}\n\t\t}\n\t\tlet button;\n\n\t\t// Permet de mettre en place les options si on est l auteur du message\n\t\tif (aid === this.context.id) {\n\t\t\tbutton = <IconButton\n\t\t\t\tdata-automation-id=\"test\"\n\t\t\t\ttext=\"\"\n\t\t\t\tsplitButtonAriaLabel={'See 2 sample options'}\n\t\t\t\taria-roledescription={'split button'}\n\t\t\t\tstyle={{ height: '35px' }}\n\t\t\t\tmenuProps={{\n\t\t\t\t\titems: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: 'editMessage',\n\t\t\t\t\t\t\ttext: 'Edit',\n\t\t\t\t\t\t\ticonProps: { iconName: 'CodeEdit' },\n\t\t\t\t\t\t\tonClick: () => this.editMsg(text)\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: 'deleteMessage',\n\t\t\t\t\t\t\ttext: 'Delete',\n\t\t\t\t\t\t\ticonProps: { iconName: 'Delete' },\n\t\t\t\t\t\t\tonClick: () => this.context.deleteMessage(uid)\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}}\n\t\t  />\n\t\t}\n\t\tlet textInput;\n\t\t// Selon si on est en edit ou non, rend un component input ou text\n\t\tif (this.state.edit) {\n\t\t\ttextInput = <TextField className=\"inputEditContainer\" inputClassName=\"inputEdit\" borderless multiline={false} resizable={false} id={id} value={this.state.newText} onChange={this.onChange} onKeyUp={this.keyPress} />\n\t\t} else {\n\t\t\ttextInput = <Text id={id}>{text}</Text>\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Stack horizontal>\n\t\t\t\t\t<Stack id=\"messageItem\" className={aid === this.context.id ? \"containerItemAuthor\" : \"containerItem\"} padding={7}>\n\t\t\t\t\t\t<Label styles={style} htmlFor={id}>{author}#{aid.substring(0, 4)} {date}</Label>\n\t\t\t\t\t\t{textInput}\n\t\t\t\t\t</Stack>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{button}\n\t\t\t\t\t</div>\n\t\t\t\t</Stack>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nAppMessageItem.contextType = AppContext;","import React from 'react';\nimport { Stack, Image, IImageProps, ImageFit } from 'office-ui-fabric-react';\nimport { AppMessageItem } from './AppMessageItem';\nimport { AppContext } from '../AppContext';\n\nconst spacing = {\n\tchildrenGap: 10\n}\n\nexport class AppMessageList extends React.Component<any, any> {\n\n\t_isMounted = false;\n\tmyRef: React.RefObject<HTMLDivElement> | null;\n\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.myRef = React.createRef();\n\t}\n\n\trender() {\n\t\tconst { list } = this.context;\n\n\t\tconst listId = Object.keys(list);\n\t\tconst imageProps: IImageProps = {\n\t\t\timageFit: ImageFit.contain,\n\t\t\twidth: 50,\n\t\t\theight: 50,\n\t\t\tclassName: 'pdpImage'\n\t\t};\n\t\treturn (\n\t\t\t<Stack className=\"container\" tokens={spacing}>\n\t\t\t\t{listId.map(id => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Stack key={id} horizontal tokens={{childrenGap: 5}} className=\"subContainer\">\n\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t{...imageProps as any}\n\t\t\t\t\t\t\t\tsrc={ list[id].pdp ? list[id].pdp : 'https://www.freeiconspng.com/uploads/discord-metro-style-icon-0.png' }\n\t\t\t\t\t\t\t\talt=\"Profil Photo\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<AppMessageItem id={id} {...list[id]}/>\n\t\t\t\t\t\t</Stack>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t)}\n\t\t\t\t<div style={{ float:\"left\", clear: \"both\" }}\n             \t\tref={this.myRef}>\n        \t\t</div>\n\t\t\t</Stack>\n\t\t)\n\t}\n\n\t// Permet de descendre tout en bas de la liste de message quand un nouveau message arrive\n\tscrollToBottom = () => {\n\t\tif (this.myRef && this.myRef.current && this._isMounted) {\n\t\t\tthis.myRef.current.scrollIntoView({ behavior: \"smooth\"});\n\t\t}\n\t}\n\t\n\tcomponentDidMount() {\n\t\tthis._isMounted = true;\n\t\tthis.scrollToBottom();\n\t}\n\n\t// Scroll uniquement si il y a un nouveau message\n\tcomponentDidUpdate() {\n\t\tif (this.props.lastEvent === 'new' && this._isMounted) {\n\t\t\tthis.scrollToBottom();\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis._isMounted = false;\n\t}\n}\n\nAppMessageList.contextType = AppContext;","import React from 'react';\nimport './App.css';\nimport { AppHeader } from './components/AppHeader';\nimport { AppFooter } from './components/AppFooter';\nimport { AppMessageList } from './components/AppMessageList';\nimport { AppContext } from './AppContext';\nimport socketIOClient from \"socket.io-client\";\nimport uuid from 'uuidv4';\nimport moment from 'moment';\nimport { initializeIcons } from '@uifabric/icons';\ninitializeIcons();\n\nlet index = 3;\n\nexport class App extends React.Component<any, any> {\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tlist: {\n\t\t\t\t'1': {\n\t\t\t\t\tauthor: 'Anthony',\n\t\t\t\t\ttext: 'Hey',\n\t\t\t\t\taid: 'nope',\n\t\t\t\t\tpdp: null,\n\t\t\t\t\tdate: null,\n\t\t\t\t\tuid: null\n\t\t\t\t},\n\t\t\t\t'2': {\n\t\t\t\t\tauthor: 'Jack',\n\t\t\t\t\ttext: 'Bonsoir',\n\t\t\t\t\taid: 'nope',\n\t\t\t\t\tpdp: null,\n\t\t\t\t\tdate: null,\n\t\t\t\t\tuid: null\n\t\t\t\t}\n\t\t\t},\n\t\t\tlastEvent: '',\n\t\t\tauthor: '',\n\t\t\tendpoint: 'http://127.0.0.1:4001',\n\t\t\tresponse: false,\n\t\t\tsocket: null,\n\t\t\tcount: 1,\n\t\t\tid: uuid(),\n\t\t\tpdp: ''\n\t\t}\n\t}\n\n\t_isMounted = false;\n\n\t// Permet de garder a jour le nombre de personnes connectées\n\tupdateData = (data: {count: number}) : void => {\n\t\tif (this._isMounted) {\n\t\t\tthis.setState({count: data.count});\n\t\t}\n\t}\n\n\t// Quand le component est pret, lance la connexion via socket avec le server\n\t// Et bind les messages d'ecoute sur cette connexion\n  \tcomponentDidMount() {\n\t\tthis._isMounted = true;\n\t\tconst { endpoint } = this.state;\n\t\tconst socket = socketIOClient(endpoint);\n\t\tsocket.on(\"chat message\", (data: {author: string, text: string, id: string, pdp: string | null, uid: string}) : void => {this._newMessage(data.author, data.text, data.id, data.pdp, data.uid)});\n\t\tsocket.on('new on', this.updateData);\n\t\tsocket.on('new off', this.updateData);\n\t\tsocket.on('delete message', this._deleteMessage);\n\t\tsocket.on('edit message', this._editMessage);\n\t\tif (this._isMounted) {\n\t\t\tthis.setState({\n\t\t\t\tsocket: socket\n\t\t\t})\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis._isMounted = false;\n\t}\n\n\trender () {\n\t\tconst { list, author, count, id, pdp } = this.state;\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<AppContext.Provider value={{\n\t\t\t\t\t\tlist: list,\n\t\t\t\t\t\tauthor: author,\n\t\t\t\t\t\tcount: count,\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\tpdp: pdp,\n\t\t\t\t\t\tsendMessage: this._sendMessage,\n\t\t\t\t\t\tchangeName: this.changeName,\n\t\t\t\t\t\tchangeUrl: this.changeUrl,\n\t\t\t\t\t\teditMessage: this._wEditMessage,\n\t\t\t\t\t\tdeleteMessage: this._wDeleteMessage\n\t\t\t\t\t}}>\n\t\t\t\t\t<AppHeader />\n\t\t\t\t\t<AppMessageList lastEvent={this.state.lastEvent}/>\n\t\t\t\t\t<AppFooter />\n\t\t\t\t</AppContext.Provider>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t// Lance au serveur un event d edition de message\n\tprivate _wEditMessage = (uid: string, text: string) => {\n\t\tif (this._isMounted) {\n\t\t\tthis.state.socket.emit('edit message', {uid: uid, text: text});\n\t\t}\n\t}\n\n\t// Lance au serveur un event de suppression de message\n\tprivate _wDeleteMessage = (uid: string) => {\n\t\tif (this._isMounted) {\n\t\t\tthis.state.socket.emit('delete message', {uid: uid});\n\t\t}\n\t}\n\n\t// Reçois les infos depuis le serveur sur le message a editer\n\tprivate _editMessage = (data: {uid: string, text: string}) => {\n\t\tif (this._isMounted) {\n\t\t\tconst { list } = this.state;\n\t\t\tlet copy = list;\n\t\t\tconst keys = Object.keys(list);\n\t\t\tconst newList = keys.filter(id => (list[id].uid === data.uid))\n\t\t\tcopy[newList[0]].text = data.text;\n\t\t\tthis.setState({\n\t\t\t\tlist: copy,\n\t\t\t\tlastEvent: 'edit'\n\t\t\t})\n\t\t}\n\t}\n\n\t// Reçois les infos depuis le serveur sur le message a supprimer\n\tprivate _deleteMessage = (data: {uid: string}) => {\n\t\tif (this._isMounted) {\n\t\t\tconst { list } = this.state;\n\t\t\tlet copy = list;\n\t\t\tconst keys = Object.keys(list);\n\t\t\tconst newList = keys.filter(id => (list[id].uid === data.uid))\n\t\t\tdelete copy[newList[0]];\n\t\t\tthis.setState({\n\t\t\t\tlist: copy,\n\t\t\t\tlastEvent: 'delete'\n\t\t\t})\n\t\t}\n\t}\n\n\t// Lance au serveur un event de nouveau message\n\tprivate _sendMessage = (author: string, text: string, id: string, pdp: string | null) => {\n\t\tif (this._isMounted) {\n\t\t\tthis.state.socket.emit('chat message', {author: author, text: text, id: id, pdp: pdp, uid: uuid()})\n\t\t}\n\t}\n\n\t// Reçois les infos depuis le serveur sur l arrivée d un nouveau message\n\tprivate _newMessage = (author: string, text: string, id: string, pdp: string | null, uid: string) => {\n\t\tif (this._isMounted) {\n\t\t\n\t\t\tconst { list } = this.state;\n\t\t\tconst listId = index++;\n\n\t\t\tconst now = moment().format(\"hh:mm A\").toString();\n\t\n\t\t\tthis.setState({\n\t\t\t\tlist: {...list, [listId]: {author: author, text: text, aid: id, pdp: pdp, date: now, uid: uid}},\n\t\t\t\tlastEvent: 'new'\n\t\t\t})\n\t\t}\n\t}\n\n\t// Permet au panel dans le header de changer les valeurs pour le nom et l url de la pdp\n\tprivate changeName = (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue: string | undefined) : void => {\n\t\tif (this._isMounted) {\n\t\t\tthis.setState({\n\t\t\t\tauthor: newValue\n\t\t\t})\n\t\t}\n\t};\n\n\tprivate changeUrl = (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue: string | undefined) : void => {\n\t\tif (this._isMounted) {\n\t\t\tthis.setState({\n\t\t\t\tpdp: newValue\n\t\t\t})\n\t\t}\n\t};\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}