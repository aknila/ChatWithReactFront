{"version":3,"sources":["callback/loading.svg","AppContext.tsx","components/AppHeader.tsx","components/AppFooter.tsx","components/AppMessageItem.tsx","components/AppMessageList.tsx","App.tsx","history.tsx","auth/Auth.tsx","callback/Callback.tsx","AllPath.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","AppContext","React","createContext","undefined","spacing","childrenGap","AppHeader","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_isMounted","_showPanel","id","showPanel","state","setState","_hidePanel","_logout","logout","panel","chan","inherits","createClass","key","value","style","root","fontSize","color","padding","imageProps","imageFit","ImageFit","contain","width","height","react_default","a","createElement","Stack","horizontalAlign","tokens","Text","variant","context","count","horizontal","DefaultButton","text","onClick","Panel","isOpen","isLightDismiss","headerText","onDismiss","Image","assign","src","pdp","alt","Label","styles","htmlFor","TextField","className","multiline","resizable","placeholder","author","onChange","changeName","changeUrl","Link","href","Component","contextType","AppFooter","myUploadRef","keyPress","event","keyCode","sendNewMessage","message","sendMessage","newValue","clickUpload","current","click","uploadFile","file","data","FormData","append","axios","post","endpoint","then","res","filename","split","join","link","originalname","createRef","_this2","Item","align","IconButton","iconProps","iconName","title","onKeyUp","PrimaryButton","ref","display","type","e","target","files","AppMessageItem","editMsg","edit","tmp","newText","validEditMessage","editMessage","uid","deleteMessage","button","textRender","_this$props","aid","date","mtch","match","inputClassName","borderless","length","data-automation-id","splitButtonAriaLabel","aria-roledescription","menuProps","items","substring","AppMessageList","myRef","scrollToBottom","scrollIntoView","behavior","list","listId","keys","map","AppMessageItem_AppMessageItem","float","clear","lastEvent","initializeIcons","index","App","updateData","loadMore","len","socket","emit","_getHistory","newList","save","forEach","elem","objectSpread","defineProperty","_wEditMessage","_wDeleteMessage","_editMessage","copy","filter","_deleteMessage","_sendMessage","now","moment","format","toString","uuid","_newMessage","localStorage","getItem","stateId","stateAuthor","statePdp","params","salonId","socketIOClient","on","prevProps","prevState","setItem","_this$state","Provider","AppHeader_AppHeader","auth","AppMessageList_AppMessageList","AppFooter_AppFooter","createBrowserHistory","Auth","auth0","WebAuth","domain","clientID","redirectUri","responseType","accessToken","idToken","expiresAt","userInfo","login","bind","handleAuthentication","isAuthenticated","getAccessToken","getIdToken","renewSession","authorize","parseHash","err","authResult","setSession","history","replace","console","log","alert","concat","error","expiresIn","Date","getTime","client","user","name","picture","sub","_this3","checkSession","error_description","removeItem","returnTo","Callback","position","justifyContent","top","bottom","left","right","backgroundColor","loading","AllPath","react_router","path","render","src_App_0","_ref","location","test","hash","callback_Callback","Boolean","window","hostname","src_AllPath","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f8ff3838.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.c5590569.svg\";","import React from 'react'\nimport { Message } from './App.types';\n\ninterface AppContextInterface {\n\tauthor: string;\n    list: Message[] | null;\n    count: number;\n    id: string;\n    pdp: string | null;\n    endpoint: string;\n    sendMessage: (author: string, text: string, aid: string, pdp: string | null, type: string, link: string | null) => void;\n    changeName: (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue: string | undefined) => void;\n    changeUrl: (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue: string | undefined) => void;\n    editMessage: (uid: string, text: string) => void;\n    deleteMessage: (uid: string) => void;\n}\n\nexport const AppContext = React.createContext<AppContextInterface | undefined>(undefined);\n","import React from 'react';\nimport { Stack, Text, TextField, Label, Panel, DefaultButton, Image, IImageProps, ImageFit, Link } from 'office-ui-fabric-react';\nimport { AppContext } from '../AppContext';\n\nconst spacing = {\n\tchildrenGap: 10\n}\n\nexport class AppHeader extends React.Component<any, any> {\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tshowPanel: {\n\t\t\t\tpanel: false,\n\t\t\t\tchan: false\n\t\t\t}\n\t\t}\n\t}\n\n\t_isMounted = false;\n\n\t// affiche/cache le panel qui permet de changer son Username et son image de profil\n\tprivate _showPanel = (id: string) => (): void => {\n\n\t\tconst { showPanel } = this.state;\n\t\tshowPanel[id] = true;\n\n\t\tif (this._isMounted)\n\t\t{\n\t\t\tthis.setState({ showPanel: showPanel });\n\t\t}\n\t};\n\n\tprivate _hidePanel = (id: string) => (): void => {\n\n\t\tconst { showPanel } = this.state;\n\t\tshowPanel[id] = false;\n\n\t\tif (this._isMounted)\n\t\t{\n\t\t\tthis.setState({ showPanel: showPanel });\n\t\t}\n\t};\n\n\tprivate _logout = () => (): void => {\n\t\tthis.props.logout();\n\t}\n\n\tcomponentDidMount() {\n\t\tthis._isMounted = true;\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis._isMounted = false;\n\t}\n\n\trender() {\n\t\tconst style = {\n\t\t\troot: {\n\t\t\t\tfontSize: '10px',\n\t\t\t\tcolor: '#aaa',\n\t\t\t\tpadding: 0\n\t\t\t}\n\t\t}\n\n\t\tconst imageProps: IImageProps = {\n\t\t\timageFit: ImageFit.contain,\n\t\t\twidth: 200,\n\t\t\theight: 200\n\t\t};\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Stack horizontalAlign=\"center\" padding={10} tokens={spacing}>\n\t\t\t\t\t<Text variant=\"xLarge\">\n\t\t\t\t\t\tChat With React (Connected: {this.context.count})\n\t\t\t\t\t</Text>\n\t\t\t\t\t<Stack horizontalAlign=\"center\" horizontal tokens={spacing}>\n\t\t\t\t\t\t<DefaultButton text=\"Channel List\" onClick={this._showPanel('chan')} />\n\t\t\t\t\t\t<DefaultButton text=\"Profil Settings\" onClick={this._showPanel('panel')} />\n\t\t\t\t\t\t<DefaultButton text=\"Logout\" onClick={this._logout()} />\n\t\t\t\t\t</Stack>\n\t\t\t\t</Stack>\n\t\t\t\t<Panel isOpen={this.state.showPanel.panel} isLightDismiss={true} headerText=\"Profil Settings\" onDismiss={this._hidePanel('panel')}>\n\t\t\t\t\t<Image\n\t\t\t\t\t\t{...imageProps as any}\n\t\t\t\t\t\t// Image par defaut si la variable pour l image est vide\n\t\t\t\t\t\tsrc={this.context.pdp ? this.context.pdp : 'https://www.freeiconspng.com/uploads/discord-metro-style-icon-0.png'}\n\t\t\t\t\t\talt=\"Profil Photo\"\n\t\t\t\t\t/>\n\t\t\t\t\t<Label styles={style} htmlFor=\"idName\">Name</Label>\n\t\t\t\t\t<TextField className=\"textInput\" id=\"idName\" multiline={false} resizable={false} placeholder=\"Anonyme\" value={this.context.author} onChange={this.context.changeName}/>\n\t\t\t\t\t<Label styles={style} htmlFor=\"idProfil\">Image</Label>\n\t\t\t\t\t<TextField className=\"textInput\" id=\"idProfil\" multiline={false} resizable={false} placeholder=\"Image Url\" value={this.context.pdp} onChange={this.context.changeUrl}/>\n\t\t\t\t</Panel>\n\t\t\t\t<Panel isOpen={this.state.showPanel.chan} isLightDismiss={true} headerText=\"Channel\" onDismiss={this._hidePanel('chan')}>\n\t\t\t\t\t<Stack horizontalAlign=\"center\" padding={10} tokens={spacing}>\n\t\t\t\t\t\t<Link className=\"channelBlock\" href=\"/salon/1\">Salon 1</Link>\n\t\t\t\t\t\t<Link className=\"channelBlock\" href=\"/salon/2\">Salon 2</Link>\n\t\t\t\t\t\t<Link className=\"channelBlock\" href=\"/salon/3\">Salon 3</Link>\n\t\t\t\t\t\t<Link className=\"channelBlock\" href=\"/salon/4\">Salon 4</Link>\n\t\t\t\t\t\t<Link className=\"channelBlock\" href=\"/salon/5\">Salon 5</Link>\n\t\t\t\t\t</Stack>\n\t\t\t\t</Panel>\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nAppHeader.contextType = AppContext;","import React from 'react';\nimport { Stack, TextField, PrimaryButton, IconButton } from 'office-ui-fabric-react';\nimport { AppContext } from '../AppContext';\nimport axios  from 'axios';\n\ninterface AppFooterState {\n\tmessage: string | undefined;\n}\n\nconst spacing = {\n\tchildrenGap: 10\n}\n\nexport class AppFooter extends React.Component<any, AppFooterState> {\n\n\tmyUploadRef: React.RefObject<HTMLInputElement>;\n\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmessage: undefined\n\t\t};\n\t\tthis.myUploadRef = React.createRef<HTMLInputElement>();\n\t}\n\n\t// Valide le message si on appuis sur Entrée\n\tprivate keyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n\t\tif (event.keyCode === 13) {\n\t\t\tthis.sendNewMessage();\n\t\t}\n\t}\n\t\n\t// Envoi le message et vide le contenu de la variable message\n\tprivate sendNewMessage = () => {\n\t\tif (this.state.message) {\n\t\t\tthis.context.sendMessage((this.context.author ? this.context.author : 'Anonyme'), this.state.message, this.context.id, this.context.pdp, 'message', null);\n\t\t\tthis.setState({ message: undefined });\n\t\t}\n\t}\n\n\tprivate onChange = (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue: string | undefined) : void => {\n\t\tthis.setState({ message: newValue});\n\t};\n\n\tprivate clickUpload = () => {\n\t\tif (this.myUploadRef && this.myUploadRef.current) {\n\t\t  this.myUploadRef.current.click()\n\t\t}\n\t}\n\n\tprivate uploadFile = (file: FileList | null) => {\n\t\tif (file) {\n\t\t\tlet data = new FormData();\n\t\t\tdata.append('file', file[0]);\n\t\t\taxios.post(this.context.endpoint + \"/upload\", data)\n      \t\t.then(res => {\n\t\t\t\tlet text = this.context.endpoint + '/static/' + res.data.filename.split(' ').join('%20');\n\t\t\t\tlet link = res.data.originalname;\n\t\t\t\tthis.context.sendMessage((this.context.author ? this.context.author : 'Anonyme'), text, this.context.id, this.context.pdp, 'file', link);\n\t\t\t})\n\t\t}\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<Stack horizontal horizontalAlign=\"center\" padding={10} tokens={spacing}>\n\t\t\t\t<Stack.Item align=\"center\">\n\t\t\t\t\t<IconButton iconProps={{ iconName: 'CirclePlus' }} title=\"Upload\" onClick={this.clickUpload} />\n\t\t\t\t</Stack.Item>\n\t\t\t\t<Stack.Item align=\"center\">\n\t\t\t\t\t<TextField id=\"sendInput\" multiline={false} resizable={false} placeholder=\"Type message...\" value={this.state.message} onChange={this.onChange} onKeyUp={this.keyPress}/>\n\t\t\t\t</Stack.Item>\n\t\t\t\t<Stack.Item align=\"center\">\n\t\t\t\t\t<PrimaryButton id=\"sendButton\" text=\"Send\" onClick={this.sendNewMessage}/>\n\t\t\t\t</Stack.Item>\n\t\t\t\t<input ref={this.myUploadRef} style={{ display: \"none\" }} type=\"file\" onChange={ (e) => this.uploadFile(e.target.files) } />\n\t\t\t</Stack>\n\t\t);\n\t}\n}\n\nAppFooter.contextType = AppContext;","import React from 'react';\nimport { Label, Stack, Text, IconButton, TextField, Image, IImageProps, ImageFit, Link } from 'office-ui-fabric-react';\nimport { AppContext } from '../AppContext';\n\nexport class AppMessageItem extends React.Component<any, any> {\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tedit: false,\n\t\t\ttmp: null,\n\t\t\tnewText: null\n\t\t}\n\t}\n\n\t// Active le mode edit, garde une copie du message original et initialise la value de l input avec le meme texte\n\tprivate editMsg = (text: string) => {\n\t\tthis.setState({\n\t\t\tedit: true,\n\t\t\ttmp: text,\n\t\t\tnewText: text\n\t\t})\n\n\t}\n\n\t// 13: Touche entrée pour valider / 27: Echap pour annuler l edition\n\tprivate keyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n\t\tif (event.keyCode === 13) {\n\t\t\tthis.validEditMessage();\n\t\t}\n\t\tif (event.keyCode === 27) {\n\t\t\tthis.setState({\n\t\t\t\tedit: false,\n\t\t\t\ttmp: null,\n\t\t\t\tnewText: null\n\t\t\t})\n\t\t}\n\t}\n\t\n\t// Valide la fin de l edition du message, dans le cas d une modification qui rend le message vide, il est alors supprimé\n\tprivate validEditMessage = () => {\n\t\tconst { newText } = this.state\n\t\tthis.setState({\n\t\t\tedit: false,\n\t\t\ttmp: null,\n\t\t\tnewText: null\n\t\t})\n\t\tif (newText) {\n\t\t\tthis.context.editMessage(this.props.uid, newText)\n\t\t} else {\n\t\t\tthis.context.deleteMessage(this.props.uid)\n\t\t}\n\t}\n\n\t// Met a jour la variable du nouveau message pour chaque modification du texte\n\tprivate onChange = (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue: string | undefined) : void => {\n\t\tthis.setState({ newText: newValue});\n\t};\n\n\trender() {\n\t\tconst { author, text, id, aid, date, uid, type, link } = this.props;\n\t\tconst style = {\n\t\t\troot: {\n\t\t\t\tfontSize: '10px',\n\t\t\t\tcolor: '#ffffff',\n\t\t\t\tpadding: 0\n\t\t\t}\n\t\t}\n\t\tlet button;\n\n\t\tconst imageProps: IImageProps = {\n\t\t\timageFit: ImageFit.contain,\n\t\t\twidth: 100,\n\t\t\theight: 100\n\t\t};\n\n\t\t// eslint-disable-next-line\n\t\tlet mtch = text.match(/(^data:image\\/([a-zA-Z]*);base64,([^\\\"]*))|(\\.(gif|jpe?g|tiff|png)$)/i);\n\t\tlet textRender;\n\t\t// Selon si on est en edit ou non, rend un component input ou text\n\t\tif (type === 'message') {\n\t\t\tif (this.state.edit) {\n\t\t\t\ttextRender = <TextField className=\"inputEditContainer\" inputClassName=\"inputEdit\" borderless multiline={false} resizable={false} id={id} value={this.state.newText} onChange={this.onChange} onKeyUp={this.keyPress} />\n\t\t\t} else if (mtch && mtch.length > 0) {\n\t\t\t\ttextRender = <Image\n\t\t\t\t\t{...imageProps as any}\n\t\t\t\t\tsrc={text}\n\t\t\t\t\talt=\"Photo in message\"\n\t\t\t\t/>\n\t\t\t} else {\n\t\t\t\ttextRender = <Text id={id}>{text}</Text>\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (mtch && mtch.length > 0) {\n\t\t\t\ttextRender = <Image\n\t\t\t\t\t{...imageProps as any}\n\t\t\t\t\tsrc={text}\n\t\t\t\t\talt={link}\n\t\t\t\t/>\n\t\t\t} else {\n\t\t\t\ttextRender = <Link className=\"fileLink\" href={text}>{link}</Link>\n\t\t\t}\n\t\t}\n\n\t\t// Permet de mettre en place les options si on est l auteur du message\n\t\tif (aid === this.context.id && type === 'message') {\n\t\t\tbutton = <IconButton\n\t\t\t\tdata-automation-id=\"test\"\n\t\t\t\ttext=\"\"\n\t\t\t\tsplitButtonAriaLabel={'See 2 sample options'}\n\t\t\t\taria-roledescription={'split button'}\n\t\t\t\tstyle={{ height: '35px' }}\n\t\t\t\tmenuProps={{\n\t\t\t\t\titems: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: 'editMessage',\n\t\t\t\t\t\t\ttext: 'Edit',\n\t\t\t\t\t\t\ticonProps: { iconName: 'CodeEdit' },\n\t\t\t\t\t\t\tonClick: () => this.editMsg(text)\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: 'deleteMessage',\n\t\t\t\t\t\t\ttext: 'Delete',\n\t\t\t\t\t\t\ticonProps: { iconName: 'Delete' },\n\t\t\t\t\t\t\tonClick: () => this.context.deleteMessage(uid)\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}}\n\t\t  />\n\t\t} else if (aid === this.context.id) {\n\t\t\tbutton = <IconButton\n\t\t\t\tdata-automation-id=\"test\"\n\t\t\t\ttext=\"\"\n\t\t\t\tsplitButtonAriaLabel={'See 1 sample options'}\n\t\t\t\taria-roledescription={'split button'}\n\t\t\t\tstyle={{ height: '35px' }}\n\t\t\t\tmenuProps={{\n\t\t\t\t\titems: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: 'deleteMessage',\n\t\t\t\t\t\t\ttext: 'Delete',\n\t\t\t\t\t\t\ticonProps: { iconName: 'Delete' },\n\t\t\t\t\t\t\tonClick: () => this.context.deleteMessage(uid)\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}}\n\t\t  />\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Stack horizontal>\n\t\t\t\t\t<Stack id=\"messageItem\" className={aid === this.context.id ? \"containerItemAuthor\" : \"containerItem\"} padding={7}>\n\t\t\t\t\t\t<Label styles={style} htmlFor={id}>{author}#{aid.substring(0, 4)} {date}</Label>\n\t\t\t\t\t\t{textRender}\n\t\t\t\t\t</Stack>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{button}\n\t\t\t\t\t</div>\n\t\t\t\t</Stack>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nAppMessageItem.contextType = AppContext;","import React from 'react';\nimport { Stack, Image, IImageProps, ImageFit } from 'office-ui-fabric-react';\nimport { AppMessageItem } from './AppMessageItem';\nimport { AppContext } from '../AppContext';\n\nconst spacing = {\n\tchildrenGap: 10\n}\n\nexport class AppMessageList extends React.Component<any, any> {\n\n\t_isMounted = false;\n\tmyRef: React.RefObject<HTMLDivElement> | null;\n\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.myRef = React.createRef();\n\t}\n\n\trender() {\n\t\tconst { list } = this.context;\n\n\t\tconst listId = Object.keys(list);\n\t\tconst imageProps: IImageProps = {\n\t\t\timageFit: ImageFit.contain,\n\t\t\twidth: 50,\n\t\t\theight: 50,\n\t\t\tclassName: 'pdpImage'\n\t\t};\n\n\t\treturn (\n\t\t\t<Stack className=\"container\" tokens={spacing}>\n\t\t\t\t{listId.map(id => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Stack key={id} horizontal tokens={{childrenGap: 5}} className=\"subContainer\">\n\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t{...imageProps}\n\t\t\t\t\t\t\t\tsrc={ list[id].pdp ? list[id].pdp : 'https://www.freeiconspng.com/uploads/discord-metro-style-icon-0.png' }\n\t\t\t\t\t\t\t\talt=\"Profil Photo\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<AppMessageItem id={id} {...list[id]}/>\n\t\t\t\t\t\t</Stack>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t\t<div style={{ float:\"left\", clear: \"both\" }}\n             \t\tref={this.myRef}>\n    \t\t\t</div>\n\t\t\t</Stack>\n\t\t)\n\t}\n\n\t// Permet de descendre tout en bas de la liste de message quand un nouveau message arrive\n\tscrollToBottom = () => {\n\t\tif (this.myRef && this.myRef.current && this._isMounted) {\n\t\t\tthis.myRef.current.scrollIntoView({ behavior: \"smooth\"});\n\t\t}\n\t}\n\t\n\tcomponentDidMount() {\n\t\tthis._isMounted = true;\n\t\tthis.scrollToBottom();\n\t}\n\n\t// Scroll uniquement si il y a un nouveau message\n\tcomponentDidUpdate() {\n\t\tif (this.props.lastEvent === 'new' && this._isMounted) {\n\t\t\tthis.scrollToBottom();\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis._isMounted = false;\n\t}\n}\n\nAppMessageList.contextType = AppContext;","import React from 'react';\nimport './App.css';\nimport { AppHeader } from './components/AppHeader';\nimport { AppFooter } from './components/AppFooter';\nimport { AppMessageList } from './components/AppMessageList';\nimport { AppContext } from './AppContext';\nimport socketIOClient from \"socket.io-client\";\nimport uuid from 'uuidv4';\nimport { Link } from 'office-ui-fabric-react';\nimport moment from 'moment';\nimport { initializeIcons } from '@uifabric/icons';\nimport { Message } from './App.types';\n// import Auth from './auth/Auth';\ninitializeIcons();\n\nlet index = 1;\n\nexport class App extends React.Component<any, any> {\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tlist: {},\n\t\t\tlastEvent: '',\n\t\t\tauthor: localStorage.getItem(\"contextAuthorKey\"),\n\t\t\t// endpoint: 'http://212.47.251.157:4001',\n\t\t\t// endpoint: 'http://172.24.111.88:4001',\n\t\t\tendpoint: 'http://127.0.0.1:4001',\n\t\t\tsocket: null,\n\t\t\tcount: 1,\n\t\t\tid: localStorage.getItem(\"contextIdKey\"),\n\t\t\tpdp: localStorage.getItem(\"contextPdpKey\")\n\t\t}\n\t\t// const auth: Auth = new Auth();\n\t}\n\n\t_isMounted = false;\n\n\t// Permet de garder a jour le nombre de personnes connectées\n\tupdateData = (data: {count: number}) : void => {\n\t\tif (this._isMounted) {\n\t\t\tthis.setState({count: data.count});\n\t\t}\n\t}\n\n\t// Quand le component est pret, lance la connexion via socket avec le server\n\t// Et bind les messages d'ecoute sur cette connexion\n  \tcomponentDidMount() {\n\t\tthis._isMounted = true;\n\t\tlet stateId = (this.state.id ? this.state.id : uuid());\n\t\tlet stateAuthor = (this.state.author ? this.state.author : '');\n\t\tlet statePdp = (this.state.pdp ? this.state.pdp : '');\n\t\tconst { endpoint } = this.state;\n\t\t// const id = this.props.salonId;\n\t\tconst id = this.props.match.params.salonId;\n\t\tconst socket = socketIOClient(endpoint + '/salon' + (id > 0 && id <= 5 ? id : '1'));\n\t\tsocket.on('history', this._getHistory)\n\t\tsocket.on(\"chat message\", (data: Message) : void => {this._newMessage(data)});\n\t\tsocket.on('new on', this.updateData);\n\t\tsocket.on('new off', this.updateData);\n\t\tsocket.on('delete message', this._deleteMessage);\n\t\tsocket.on('edit message', this._editMessage);\n\t\tif (this._isMounted) {\n\t\t\tthis.setState({\n\t\t\t\tsocket: socket,\n\t\t\t\tid: stateId,\n\t\t\t\tpdp: statePdp,\n\t\t\t\tauthor: stateAuthor\n\t\t\t})\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps: any, prevState: any) {\n\t\tif (localStorage.getItem('isLoggedIn') && this.state.id !== prevState.id) {\n\t\t\tlocalStorage.setItem(\"contextIdKey\", this.state.id)\n\t\t}\n\t\tif (localStorage.getItem('isLoggedIn') && this.state.author !== prevState.author) {\n\t\t\tlocalStorage.setItem(\"contextAuthorKey\", this.state.author)\n\t\t}\n\t\tif (localStorage.getItem('isLoggedIn') && this.state.pdp !== prevState.pdp) {\n\t\t\tlocalStorage.setItem(\"contextPdpKey\", this.state.pdp)\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis._isMounted = false;\n\t}\n\n\trender () {\n\t\tconst { list, author, count, id, pdp, endpoint } = this.state;\n\n\t\tconst style = {\n\t\t\troot: {\n\t\t\t\tpadding: 5\n\t\t\t}\n\t\t};\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<AppContext.Provider value={{\n\t\t\t\t\t\tlist: list,\n\t\t\t\t\t\tauthor: author,\n\t\t\t\t\t\tcount: count,\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\tpdp: pdp,\n\t\t\t\t\t\tsendMessage: this._sendMessage,\n\t\t\t\t\t\tchangeName: this.changeName,\n\t\t\t\t\t\tchangeUrl: this.changeUrl,\n\t\t\t\t\t\teditMessage: this._wEditMessage,\n\t\t\t\t\t\tdeleteMessage: this._wDeleteMessage,\n\t\t\t\t\t\tendpoint: endpoint\n\t\t\t\t\t}}>\n\t\t\t\t\t<AppHeader logout={this.props.auth.logout}/>\n\t\t\t\t\t<Link styles={style} onClick={this.loadMore}>Load more</Link>\n\t\t\t\t\t<AppMessageList lastEvent={this.state.lastEvent}/>\n\t\t\t\t\t<AppFooter />\n\t\t\t\t</AppContext.Provider>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tprivate loadMore = () => {\n\t\tif (this._isMounted) {\n\t\t\tlet len = Object.keys(this.state.list).length + 5;\n\t\t\tthis.state.socket.emit('history', {len: len})\n\t\t}\n\t}\n\n\tprivate _getHistory = (data: {save: Message[]}) => {\n\t\tif (this._isMounted) {\n\n\t\t\t// const { list } = this.state;\n\t\t\tlet newList = {};\n\n\t\t\tdata.save.forEach((elem) => {\n\t\t\t\tlet listId = index++;\n\t\t\t\tnewList = {...newList, [listId]: { author: elem.author, text: elem.text, aid: elem.aid, pdp: elem.pdp, date: elem.date, uid: elem.uid, type: elem.type, link: elem.link }}\n\t\t\t})\n\n\t\t\tthis.setState({\n\t\t\t\tlist: newList\n\t\t\t})\n\t\t}\n\t}\n\n\t// Lance au serveur un event d edition de message\n\tprivate _wEditMessage = (uid: string, text: string) => {\n\t\tif (this._isMounted) {\n\t\t\tthis.state.socket.emit('edit message', {uid: uid, text: text});\n\t\t}\n\t}\n\n\t// Lance au serveur un event de suppression de message\n\tprivate _wDeleteMessage = (uid: string) => {\n\t\tif (this._isMounted) {\n\t\t\tthis.state.socket.emit('delete message', {uid: uid});\n\t\t}\n\t}\n\n\t// Reçois les infos depuis le serveur sur le message a editer\n\tprivate _editMessage = (data: {uid: string, text: string}) => {\n\t\tif (this._isMounted) {\n\t\t\tconst { list } = this.state;\n\t\t\tlet copy = list;\n\t\t\tconst keys = Object.keys(list);\n\t\t\tconst newList = keys.filter(id => (list[id].uid === data.uid))\n\t\t\tif (newList && newList.length > 0 && copy[newList[0]]) {\n\t\t\t\tcopy[newList[0]].text = data.text;\n\t\t\t\tthis.setState({\n\t\t\t\t\tlist: copy,\n\t\t\t\t\tlastEvent: 'edit'\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t// Reçois les infos depuis le serveur sur le message a supprimer\n\tprivate _deleteMessage = (data: {uid: string}) => {\n\t\tif (this._isMounted) {\n\t\t\tconst { list } = this.state;\n\t\t\tlet copy = list;\n\t\t\tconst keys = Object.keys(list);\n\t\t\tconst newList = keys.filter(id => (list[id].uid === data.uid))\n\t\t\tif (newList && newList.length > 0 && copy[newList[0]]) {\n\t\t\t\tdelete copy[newList[0]];\n\t\t\t\tthis.setState({\n\t\t\t\t\tlist: copy,\n\t\t\t\t\tlastEvent: 'delete'\n\t\t\t\t})\n\t\t\t}\n\t\t\tif (Object.keys(copy).length < 7) {\n\t\t\t\tthis.state.socket.emit('history', {len: 7})\n\t\t\t}\n\t\t}\n\t}\n\n\t// Lance au serveur un event de nouveau message\n\tprivate _sendMessage = (author: string, text: string, aid: string, pdp: string | null, type: string, link: string | null) => {\n\t\tif (this._isMounted) {\n\t\t\tconst now = moment().format(\"hh:mm A\").toString();\n\t\t\tthis.state.socket.emit('chat message', {author: author, text: text, aid: aid, pdp: pdp, uid: uuid(), date: now, type: type, link: link})\n\t\t}\n\t}\n\n\t// Reçois les infos depuis le serveur sur l arrivée d un nouveau message\n\tprivate _newMessage = (data: Message) => {\n\t\tif (this._isMounted) {\n\n\t\t\tconst { list } = this.state;\n\t\t\tconst listId = index++;\n\n\t\t\tthis.setState({\n\t\t\t\tlist: {...list, [listId]: {author: data.author, text: data.text, aid: data.aid, pdp: data.pdp, date: data.date, uid: data.uid, type: data.type, link: data.link}},\n\t\t\t\tlastEvent: 'new'\n\t\t\t})\n\t\t}\n\t}\n\n\t// Permet au panel dans le header de changer les valeurs pour le nom et l url de la pdp\n\tprivate changeName = (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue: string | undefined) : void => {\n\t\tif (this._isMounted) {\n\t\t\tthis.setState({\n\t\t\t\tauthor: newValue\n\t\t\t})\n\t\t}\n\t};\n\n\tprivate changeUrl = (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue: string | undefined) : void => {\n\t\tif (this._isMounted) {\n\t\t\tthis.setState({\n\t\t\t\tpdp: newValue\n\t\t\t})\n\t\t}\n\t};\n}\n\nexport default App;\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import auth0 from 'auth0-js';\nimport history from '../history';\n\nexport default class Auth {\n\tauth0 = new auth0.WebAuth({\n\t\tdomain: 'aancel.eu.auth0.com',\n\t\tclientID: 'nu9gltRW3Vkjl5rLbIOgZJv6UOyMILtm',\n\t\tredirectUri: 'http://localhost:3000/callback',\n\t\tresponseType: 'token id_token'\n\t});\n\n\taccessToken : string | undefined | null;\n\tidToken : string | undefined | null;\n\texpiresAt : number | undefined | null;\n\tuserInfo: auth0.Auth0UserProfile | undefined;\n\n\tconstructor() {\n\t\tthis.login = this.login.bind(this);\n\t\tthis.logout = this.logout.bind(this);\n\t\tthis.handleAuthentication = this.handleAuthentication.bind(this);\n\t\tthis.isAuthenticated = this.isAuthenticated.bind(this);\n\t\tthis.getAccessToken = this.getAccessToken.bind(this);\n\t\tthis.getIdToken = this.getIdToken.bind(this);\n\t\tthis.renewSession = this.renewSession.bind(this);\n\t}\n\n\tlogin() {\n\t\tthis.auth0.authorize();\n\t}\n\n\thandleAuthentication() {\n\t\tthis.auth0.parseHash((err, authResult) => {\n\t\t\tif (authResult && authResult.accessToken && authResult.idToken) {\n\t\t\t\tthis.setSession(authResult);\n\t\t\t} else if (err) {\n\t\t\t\thistory.replace('/salon/1');\n\t\t\t\tconsole.log(err);\n\t\t\t\talert(`Error: ${err.error}. Check the console for further details.`);\n\t\t\t}\n\t\t});\n\t}\n\n\tgetAccessToken() {\n\t\treturn this.accessToken;\n\t}\n\n\tgetIdToken() {\n\t\treturn this.idToken;\n\t}\n\n\tsetSession(authResult: auth0.Auth0DecodedHash) {\n\t\t// Set isLoggedIn flag in localStorage\n\t\tlocalStorage.setItem('isLoggedIn', 'true');\n\n\t\t// Set the time that the Access Token will expire at\n\t\tlet expiresAt = ((authResult.expiresIn ? authResult.expiresIn : 1) * 1000) + new Date().getTime();\n\t\tthis.expiresAt = expiresAt;\n\t\tthis.accessToken = authResult.accessToken;\n\t\tthis.idToken = authResult.idToken;\n\t\tif (authResult.accessToken) {\n\t\t\tthis.auth0.client.userInfo(authResult.accessToken, (err, user) => {\n\t\t\t\tconsole.log('user', user);\n\t\t\t\tthis.userInfo = user;\n\t\t\t\tlocalStorage.setItem(\"contextAuthorKey\", user.name)\n\t\t\t\tlocalStorage.setItem(\"contextPdpKey\", user.picture)\n\t\t\t\tlocalStorage.setItem(\"contextIdKey\", user.sub.split('|', 2)[1])\n\n\t\t\t\t// navigate to the home route\n\t\t\t\thistory.replace('/salon/1');\n\t\t\t})\n\t\t}\n\t}\n\n\trenewSession() {\n\t\tthis.auth0.checkSession({}, (err, authResult) => {\n\t\t\tif (authResult && authResult.accessToken && authResult.idToken) {\n\t\t\t\tthis.setSession(authResult);\n\t\t\t} else if (err) {\n\t\t\t\tthis.logout();\n\t\t\t\tconsole.log(err);\n\t\t\t\talert(`Could not get a new token (${err.error}: ${err.error_description}).`);\n\t\t\t}\n\t\t});\n\t}\n\n\tlogout() {\n\t\t// Remove tokens and expiry time\n\t\tthis.accessToken = null;\n\t\tthis.idToken = null;\n\t\tthis.expiresAt = 0;\n\n\t\t// Remove isLoggedIn flag from localStorage\n\t\tlocalStorage.removeItem('isLoggedIn');\n\t\tlocalStorage.removeItem('contextIdKey');\n\t\tlocalStorage.removeItem('contextPdpKey');\n\n\t\tthis.auth0.logout({\n\t\treturnTo: 'http://localhost:3000/salon/1'\n\t\t});\n\n\t\t// navigate to the home route\n\t\thistory.replace('/salon/1');\n\t}\n\n\tisAuthenticated() {\n\t\t// Check whether the current time is past the\n\t\t// access token's expiry time\n\t\tlet expiresAt = this.expiresAt;\n\t\treturn (expiresAt ? new Date().getTime() < expiresAt : false);\n\t}\n}","import React, { Component } from 'react';\nimport loading from './loading.svg';\n\nclass Callback extends Component {\n  render() {\n    const style: React.CSSProperties = {\n      position: 'absolute',\n      display: 'flex',\n      justifyContent: 'center',\n      height: '100vh',\n      width: '100vw',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      backgroundColor: 'white'\n    }\n\n    return (\n      <div style={style}>\n        <img src={loading} alt=\"loading\"/>\n      </div>\n    );\n  }\n}\n\nexport default Callback;","import React from 'react';\nimport { Route, Router } from \"react-router-dom\";\nimport App from './App';\nimport Auth from './auth/Auth';\nimport Callback from './callback/Callback';\nimport history from './history';\n\nconst auth = new Auth();\n\nconst handleAuthentication = ( { location }: any ) => {\n  if (/access_token|id_token|error/.test(location.hash)) {\n\t\tauth.handleAuthentication();\n\t} else {\n\t\thistory.replace('/salon/1');\n\t}\n}\n\nconst authOrNot = () => {\n\tconsole.log(localStorage.getItem('isLoggedIn'));\n\tif (!localStorage.getItem('isLoggedIn') && !auth.isAuthenticated()) {\n\t\tauth.login();\n\t}\n}\n\nexport const AllPath = () => {\n\treturn (\n\t\t<Router history={history}>\n\t\t  <div>\n\t\t\t\t<Route path=\"/salon/:salonId\" render={(props) => {\n\t\t\t\t\tauthOrNot();\n\t\t\t\t  return <App auth={auth} {...props} />\n\t\t\t\t}}/>\n\t\t\t\t<Route path=\"/callback\" render={(props) => {\n\t\t\t\t  handleAuthentication(props);\n\t\t\t\t  return <Callback {...props} />\n\t\t\t\t}}/>\n\t\t  </div>\n\t\t</Router>\n\t);\n  }\n\n// export class AllPath extends React.Component<any, any> {\n// \t// constructor(props: any) {\n// \t// \tsuper(props);\n// \t// \tthis.state = {\n// \t// \t\tauth: new Auth()\n// \t// \t}\n// \t// }\n\n// \trender() {\n// \t\t// const { auth } = this.state;\n\n// \t\treturn (\n// \t\t\t<Router>\n// \t\t\t\t{/* <Login path=\"login\" auth={auth}/> */}\n// \t\t\t\t{/* <Callback path=\"callback\" auth={auth}/> */}\n// \t\t\t\t<App path=\"/salon/:salonId\"/>\n// \t\t\t</Router>\n// \t\t)\n// \t}\n// };\n\nexport default AllPath;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from \"react-dom\"\nimport './index.css';\nimport AllPath from './AllPath'\nimport * as serviceWorker from './serviceWorker';\n\nrender(<AllPath />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}